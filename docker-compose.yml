version: "3.6"

services:

  web-service:
    container_name: web-service.sgq
    image: mathiasfk/sgq-web-service:1.0.0-DEV
    build: ./services/web/sgq-app/
    volumes:
      - ./services/web/sgq-app/:/usr/src/app # Bindind files for quick development
      - web-node-modules:/usr/src/app/node_modules
    ports:
      - '80:80' # expose ports - HOST:CONTAINER
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=80
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      - api-gateway
    networks:
      - microservices

  api-gateway:
    container_name: api-gateway.sgq
    image: mathiasfk/sgq-api-gateway:1.0.0
    build: ./services/api-gateway/
    restart: unless-stopped
    ports:
      - 3000:3000 # host:container
    networks:
      - microservices

  auth-service:
    container_name: auth-service.sgq
    image: mathiasfk/sgq-auth-service:1.0.0
    build: ./services/auth-service/
    restart: unless-stopped
    ports:
      - 4000:4000
    networks:
      - microservices

  bi-module:
    container_name: bi-module.sgq
    image: mathiasfk/sgq-bi-module:1.0.0
    build: ./services/bi-module/
    restart: unless-stopped
    ports:
      - 3001:3001 # host:container
    networks:
      - microservices

  compliance-module:
    container_name: compliance-module.sgq
    image: mathiasfk/sgq-compliance-module:1.0.0
    build: ./services/compliance-module/
    restart: unless-stopped
    ports:
      - 3002:3002 # host:container
    networks:
      - microservices

  divulgation-module:
    container_name: divulgation-module.sgq
    image: mathiasfk/sgq-divulgation-module:1.0.0
    build: ./services/divulgation-module/
    restart: unless-stopped
    ports:
      - 3003:3003 # host:container
    networks:
      - microservices

  incidents-module:
    container_name: incidents-module.sgq
    image: mathiasfk/incidents-module:1.0.0
    build: ./services/incidents-module/
    restart: unless-stopped
    ports:
      - 3004:3004 # host:container
    networks:
      - microservices

  non-conformities-module:
    container_name: non-conformities-module.sgq
    image: mathiasfk/sgq-non-conformities-module:1.0.0
    build: ./services/non-conformities-module/
    restart: unless-stopped
    ports:
      - 3005:3005 # host:container
    networks:
      - microservices

  processes-module:
    container_name: processes-module.sgq
    image: mathiasfk/sgq-processes-module:1.0.0
    build: ./services/processes-module/
    restart: unless-stopped
    ports:
      - 3006:3006 # host:container
    networks:
      - microservices

  users-db:
    container_name: users-db
    image: mongo:3.6.18
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongorootpassword
    networks:
      - microservices

  incidents-db:
    container_name: incidents-db
    image: mathiasfk/sgq-incidents-db:1.0.0
    build: ./services/incidents-module/db/
    restart: always
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'incidents_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - incidents-db:/var/lib/mysql
      - ./services/incidents-module/db/init_db.sql:/data/application/init_db.sql
    networks:
      - microservices

  non-conformities-db:
    container_name: non-conformities-db
    image: mathiasfk/sgq-non-conformities-db:1.0.0
    build: ./services/non-conformities-module/db/
    restart: always
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'non_conformities_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - non-conformities-db:/var/lib/mysql
    networks:
      - microservices

  processes-db:
    container_name: processes-db
    image: mathiasfk/sgq-processes-db:1.0.0
    build: ./services/processes-module/db/
    restart: always
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'processes_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - processes-db:/var/lib/mysql
    networks:
      - microservices

networks:
    microservices:

volumes:
  incidents-db:
  non-conformities-db:
  processes-db:
  web-node-modules: