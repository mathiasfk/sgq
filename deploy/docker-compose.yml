version: "3"

services:

  web-service:
    image: mathiasfk/sgq-web-service:1.0.0
    build: 
      context: ../services/web/sgq-app/
      dockerfile: Dockerfile-prod
    volumes:
      - web-node-modules:/usr/src/app/node_modules
    ports:
      - '80:80' # expose ports - HOST:CONTAINER
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=80
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: web

  api-gateway:
    image: mathiasfk/sgq-api-gateway:1.0.0
    build: ../services/api-gateway/
    ports:
      - 3000:3000 # host:container
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: api-gateway

  auth-service:
    image: mathiasfk/sgq-auth-service:1.0.0
    build: ../services/auth-service/
    ports:
      - 4000:4000
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: auth

  bi-module:
    image: mathiasfk/sgq-bi-module:1.0.0
    build: ../services/bi-module/
    ports:
      - 3001:3001 # host:container
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: bi

  incidents-module:
    image: mathiasfk/incidents-module:1.0.0
    build: ../services/incidents-module/
    ports:
      - 3004:3004 # host:container
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: incidents

  non-conformities-module:
    image: mathiasfk/sgq-non-conformities-module:1.0.0
    build: ../services/non-conformities-module/
    ports:
      - 3005:3005 # host:container
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: non-conformities

  processes-module:
    image: mathiasfk/sgq-processes-module:1.0.0
    build: ../services/processes-module/
    ports:
      - 3006:3006 # host:container
    networks:
      - microservices

  mongo:
    image: mongo:3.6.18
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongorootpassword
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: mongo

  incidents-db:
    image: mathiasfk/sgq-incidents-db:1.0.0
    build: ../services/incidents-module/db/
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'incidents_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - incidents-db:/var/lib/mysql
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: incidents-db

  non-conformities-db:
    image: mathiasfk/sgq-non-conformities-db:1.0.0
    build: ../services/non-conformities-module/db/
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'non_conformities_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - non-conformities-db:/var/lib/mysql
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: non-conformities-db

  processes-db:
    image: mathiasfk/sgq-processes-db:1.0.0
    build: ../services/processes-module/db/
    command: --init-file /data/application/init_db.sql
    environment:
      MYSQL_DATABASE: 'non_conformities_db'
      MYSQL_USER: 'sgq'
      MYSQL_PASSWORD: 'sgq'
      MYSQL_ROOT_PASSWORD: 'not_123456'
    volumes:
      - processes-db:/var/lib/mysql
    networks:
      - microservices
    logging:
      driver: awslogs
      options: 
        awslogs-group: sgq
        awslogs-region: us-west-2
        awslogs-stream-prefix: processes-db

networks:
    microservices:

volumes:
  incidents-db:
  non-conformities-db:
  processes-db:
  web-node-modules: